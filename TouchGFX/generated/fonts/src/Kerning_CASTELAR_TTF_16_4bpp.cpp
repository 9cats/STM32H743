#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_CASTELAR_TTF_16_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, P], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, T], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, V], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, W], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, V], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, W], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, P], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, T], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, V], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, W], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, A], Second char = [0x0054, T], Kerning dist = -1)
    { 0x006C, -1 },  // (First char = [0x006C, L], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, R], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, A], Second char = [0x0057, W], Kerning dist = -1)
    { 0x006C, -1 },  // (First char = [0x006C, L], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, R], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0061, A], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0061, A], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, P], Second char = [0x0061, A], Kerning dist = -1)
    { 0x0074, -1 },  // (First char = [0x0074, T], Second char = [0x0061, A], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, V], Second char = [0x0061, A], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, W], Second char = [0x0061, A], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, A], Second char = [0x0074, T], Kerning dist = -1)
    { 0x006C, -1 },  // (First char = [0x006C, L], Second char = [0x0074, T], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, R], Second char = [0x0074, T], Kerning dist = -1)
    { 0x0061, -2 },  // (First char = [0x0061, A], Second char = [0x0076, V], Kerning dist = -2)
    { 0x006C, -1 },  // (First char = [0x006C, L], Second char = [0x0076, V], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, R], Second char = [0x0076, V], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, A], Second char = [0x0077, W], Kerning dist = -1)
    { 0x006C, -1 },  // (First char = [0x006C, L], Second char = [0x0077, W], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, R], Second char = [0x0077, W], Kerning dist = -1)
};
