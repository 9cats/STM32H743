/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef OSCILLOSCOPEVIEWBASE_HPP
#define OSCILLOSCOPEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/oscilloscope_screen/OscilloscopePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class OscilloscopeViewBase : public touchgfx::View<OscilloscopePresenter>
{
public:
    OscilloscopeViewBase();
    virtual ~OscilloscopeViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void sample()
    {
        // Override and implement this function in Oscilloscope
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Line line_y;
    touchgfx::PainterRGB565 line_yPainter;
    touchgfx::Line line_x;
    touchgfx::PainterRGB565 line_xPainter;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::GraphWrapAndClear<251> dynamicGraph1;
    touchgfx::GraphElementLine dynamicGraph1Line1;
    touchgfx::PainterRGB565 dynamicGraph1Line1Painter;
    touchgfx::GraphElementGridX dynamicGraph1MajorXAxisGrid;
    touchgfx::GraphElementGridY dynamicGraph1MajorYAxisGrid;
    touchgfx::GraphLabelsX dynamicGraph1MajorXAxisLabel;
    touchgfx::ButtonWithLabel buttonWithLabel1;
    touchgfx::ButtonWithLabel buttonWithLabel2;
    touchgfx::TextAreaWithOneWildcard ad_box;

    /*
     * Wildcard Buffers
     */
    static const uint16_t AD_BOX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar ad_boxBuffer[AD_BOX_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<OscilloscopeViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // OSCILLOSCOPEVIEWBASE_HPP
